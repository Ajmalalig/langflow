services:
  proxy:
    image: caddy:latest
    env_file:
      - .env
    networks:
      - default
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    ports:
      - "80:80"
      - "443:443"
    deploy:
      placement:
        constraints:
          - node.role == manager

  backend: &backend
    image: "langflowai/langflow-backend:latest"
    depends_on:
      - db
      - result_backend
      - temporal
    env_file:
      - .env
    healthcheck:
      test: "exit 0"
    ports:
      - "7860:7860"

  db:
    image: postgres:15.4
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    deploy:
      placement:
        constraints:
          - node.labels.app-db-data == true
    healthcheck:
      test: "exit 0"
    env_file:
      - .env

  pgadmin:
    image: dpage/pgadmin4
    networks:
      - default
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    env_file:
      - .env
    ports:
      - "5050:5050"

  result_backend:
    image: redis:6.2.5
    env_file:
      - .env
    ports:
      - "6379:6379"
    healthcheck:
      test: "exit 0"

  frontend:
    image: "langflowai/langflow-frontend:latest"
    env_file:
      - .env
    restart: on-failure

  prometheus:
    image: prom/prometheus:v2.37.9
    env_file:
      - .env
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    healthcheck:
      test: "exit 0"
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:8.2.6
    env_file:
      - .env
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"

  temporal:
    image: temporalio/auto-setup:${TEMPORAL_VERSION}
    environment:
      - DB=postgres12
      - DB_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PWD=${POSTGRES_PASSWORD}
      - POSTGRES_SEEDS=db
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development-sql.yaml
    depends_on:
      - db
    networks:
      - default
    ports:
      - "7233:7233"
    volumes:
      - ./dynamicconfig:/etc/temporal/config/dynamicconfig

  temporal-admin-tools:
    image: temporalio/admin-tools:${TEMPORAL_ADMINTOOLS_VERSION}
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CLI_ADDRESS=temporal:7233
    depends_on:
      - temporal
    networks:
      - default
    stdin_open: true
    tty: true

  temporal-ui:
    image: temporalio/ui:${TEMPORAL_UI_VERSION}
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:3000
    depends_on:
      - temporal
    networks:
      - default
    ports:
      - "8080:8080"

volumes:
  grafana_data:
  app-db-data:
  pgadmin-data:
  caddy_data:
  caddy_config:
  temporal_data:

networks:
  default:
    external: false
